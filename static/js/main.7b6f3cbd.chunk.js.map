{"version":3,"sources":["components/Highchart.js","components/Weather.js","helpers/apiUrls.js","helpers/fetcher.js","App.js","index.js"],"names":["days","Highchart","_ref","city","_ref$data","data","hoursHighchart","tempHighchart","fullDate","Date","toLocaleString","counter","getDay","hoursWithDays","Object","toConsumableArray","map","item","substring","HighchartOptions","title","text","concat","style","fontSize","fontWeight","subtitle","xAxis","categories","yAxis","series","name","chart","fontFamily","color","react_default","a","createElement","className","highcharts_react_min_default","highcharts","Highcharts","options","Weather","country","icon","temp","wind","humidity","pressure","sunrise","sunset","highchartApiUrl","arguments","length","undefined","weatherApiUrl","fetcher","asyncToGenerator","regenerator_default","mark","_callee","url","res","wrap","_context","prev","next","fetch","sent","ok","json","abrupt","console","error","stop","_x","apply","this","App","state","value","opacity","dataHighchart","dataWeather","dataHighchartIsLoad","dataWeatherIsLoad","setInitialWeatherData","weatherData","_weatherData$main","speed","weather","_weatherData$sys","main","sys","_this","setState","toLocaleTimeString","id","setInitialChartData","_callee2","chartData","list","_context2","date","dt_txt","slice","handleCahngeInput","e","target","prevProps","prevState","_this$state","Fragment","type","placeholder","onChange","components_Weather","components_Highchart","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7b6f3cbd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Highcharts from \"highcharts/highstock\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport \"../styles/Highchart.css\";\r\n\r\nconst days = [\r\n  \"Sunday\",\r\n  \"Monday\",\r\n  \"Tuesday\",\r\n  \"Wednesday\",\r\n  \"Thursday\",\r\n  \"Friday\",\r\n  \"Saturday\",\r\n];\r\n\r\nconst Highchart = ({ city, data: { hoursHighchart, tempHighchart } }) => {\r\n  const fullDate = new Date().toLocaleString();\r\n  let counter = new Date().getDay();\r\n\r\n  const hoursWithDays = [...hoursHighchart[0]].map((item) => {\r\n    if (item === \"00:00\") {\r\n      if (counter < 3) {\r\n        item = days[counter + 1].substring(0, 3) + \" \" + item;\r\n        counter += 1;\r\n      } else if (counter === 3) {\r\n        item = days[4].substring(0, 3) + \" \" + item;\r\n        counter += 1;\r\n      } else if (counter === 4) {\r\n        item = days[5].substring(0, 3) + \" \" + item;\r\n        counter += 1;\r\n      } else if (counter === 5) {\r\n        item = days[6].substring(0, 3) + \" \" + item;\r\n        counter += 1;\r\n      } else if (counter === 6) {\r\n        item = days[0].substring(0, 3) + \" \" + item;\r\n        counter = 0;\r\n      }\r\n    }\r\n    return item;\r\n  });\r\n\r\n  const HighchartOptions = {\r\n    title: {\r\n      text: `Five-day weather forecast for ${city}`,\r\n      style: {\r\n        fontSize: 28,\r\n        fontWeight: \"bold\",\r\n      },\r\n    },\r\n\r\n    subtitle: {\r\n      text: `every three hours from ${fullDate}`,\r\n      style: {\r\n        fontSize: 22,\r\n      },\r\n    },\r\n    xAxis: {\r\n      categories: hoursWithDays,\r\n    },\r\n    yAxis: {\r\n      title: {\r\n        text: \"Temperature (Â°C)\",\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: \"temperature\",\r\n        data: tempHighchart[0],\r\n      },\r\n    ],\r\n    chart: {\r\n      style: {\r\n        fontFamily: \"Dosis\",\r\n        fontSize: 18,\r\n        color: \"black\",\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"highchart\">\r\n      <HighchartsReact highcharts={Highcharts} options={HighchartOptions} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Highchart;\r\n","import React from \"react\";\r\nimport \"../styles/Weather.css\";\r\nconst Weather = ({\r\n  city,\r\n  data: { country, icon, temp, wind, humidity, pressure, sunrise, sunset },\r\n}) => {\r\n  return (\r\n    <div className=\"weather\">\r\n      <h1>\r\n        Weather in\r\n        <span> {city}</span> {country}\r\n      </h1>\r\n      <p>{new Date().toLocaleString()}</p>\r\n      <i className={`wi wi-owm-${icon} icon`} />\r\n      <div className=\"values\">\r\n        <h2>\r\n          <i className=\"fas fa-thermometer-half\" /> {temp} &#8451;\r\n        </h2>\r\n        <h2>\r\n          <i className=\"fas fa-wind\" /> {wind} m/s\r\n        </h2>\r\n        <h2>\r\n          <i className=\"fas fa-tint\" /> {humidity} %\r\n        </h2>\r\n        <h2>\r\n          <i className=\"fab fa-cloudscale\" /> {pressure} hPa\r\n        </h2>\r\n        <h2>\r\n          <i className=\"fas fa-sun\" /> {sunrise}\r\n        </h2>\r\n        <h2>\r\n          <i className=\"fas fa-moon\" /> {sunset}\r\n        </h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n","export const highchartApiUrl = (city = \"warsaw\") =>\r\n  `https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=1697193f8750f5ec8d1046c2118876cf&units=metric`;\r\nexport const weatherApiUrl = (city = \"warsaw\") =>\r\n  `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=1697193f8750f5ec8d1046c2118876cf&units=metric`;\r\n","export const fetcher = async (url) => {\r\n  const res = await fetch(url);\r\n  if (res.ok) {\r\n    return await res.json();\r\n  } else {\r\n    console.error(\"cannot read data\");\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Highchart from \"./components/Highchart\";\r\nimport Weather from \"./components/Weather\";\r\nimport { highchartApiUrl, weatherApiUrl } from \"./helpers/apiUrls\";\r\nimport { fetcher } from \"./helpers/fetcher\";\r\nimport \"./styles/App.css\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    value: \"\",\r\n    city: \"\",\r\n    opacity: 0,\r\n    dataHighchart: {\r\n      hoursHighchart: [],\r\n      tempHighchart: [],\r\n    },\r\n    dataWeather: {\r\n      temp: \"\",\r\n      wind: \"\",\r\n      humidity: \"\",\r\n      pressure: \"\",\r\n      sunrise: \"\",\r\n      sunset: \"\",\r\n      icon: \"\",\r\n      country: \"\",\r\n    },\r\n\r\n    dataHighchartIsLoad: false,\r\n    dataWeatherIsLoad: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setInitialWeatherData();\r\n    this.setInitialChartData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.value.length > 1 && prevState.value !== this.state.value) {\r\n      this.setState({\r\n        dataWeather: {\r\n          temp: \"--\",\r\n          wind: \"--\",\r\n          humidity: \"--\",\r\n          pressure: \"--\",\r\n          sunrise: \"--\",\r\n          sunset: \"--\",\r\n          icon: \"--\",\r\n          country: \"\",\r\n        },\r\n        city: \"--\",\r\n      });\r\n\r\n      this.setInitialWeatherData(this.state.value);\r\n      this.setInitialChartData(this.state.value);\r\n    }\r\n  }\r\n\r\n  setInitialWeatherData = async (city) => {\r\n    const weatherData = await fetcher(weatherApiUrl(city));\r\n    if (weatherData) {\r\n      const {\r\n        main: { temp, humidity, pressure },\r\n        wind: { speed },\r\n        weather,\r\n        sys: { country, sunrise, sunset },\r\n        name,\r\n      } = weatherData;\r\n      this.setState({\r\n        dataWeather: {\r\n          temp: temp,\r\n          wind: speed,\r\n          humidity: humidity,\r\n          pressure: pressure,\r\n          sunrise: new Date(sunrise * 1000).toLocaleTimeString(),\r\n          sunset: new Date(sunset * 1000).toLocaleTimeString(),\r\n          icon: weather[0].id,\r\n          country: country,\r\n        },\r\n        city: name,\r\n        dataWeatherIsLoad: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  setInitialChartData = async (city) => {\r\n    const chartData = await fetcher(highchartApiUrl(city));\r\n    if (chartData) {\r\n      const { list } = chartData;\r\n      this.setState({\r\n        dataHighchart: {\r\n          hoursHighchart: [list.map((date) => date.dt_txt.slice(11, 16))],\r\n          tempHighchart: [list.map((item) => item.main.temp)],\r\n        },\r\n        dataHighchartIsLoad: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCahngeInput = (e) => this.setState({ value: e.target.value });\r\n\r\n  render() {\r\n    const {\r\n      dataWeatherIsLoad,\r\n      dataHighchartIsLoad,\r\n      dataHighchart,\r\n      city,\r\n      dataWeather,\r\n      value,\r\n    } = this.state;\r\n    return (\r\n      <>\r\n        <div className=\"App\">\r\n          <div className=\"input\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"find your city!\"\r\n              value={value}\r\n              onChange={this.handleCahngeInput}\r\n            />\r\n            <i className=\"fas fa-search\" />\r\n          </div>\r\n          {dataWeatherIsLoad && (\r\n            <Weather data={dataWeather} city={this.state.city} />\r\n          )}\r\n          {dataHighchartIsLoad && (\r\n            <Highchart data={dataHighchart} city={city} />\r\n          )}\r\n          <footer>\r\n            <p>highchart generate by www.highcharts.com</p>\r\n          </footer>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}